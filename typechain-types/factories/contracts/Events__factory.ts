/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { Events, EventsInterface } from "../../contracts/Events";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "brokerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "userAddress",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "chainId",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "fee",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isEthFee",
        type: "bool",
      },
    ],
    name: "BridgeEvent",
    type: "event",
  },
] as const;

export class Events__factory {
  static readonly abi = _abi;
  static createInterface(): EventsInterface {
    return new Interface(_abi) as EventsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Events {
    return new Contract(address, _abi, runner) as unknown as Events;
  }
}
